{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","toggleModal","bind","handleSubmit","state","isNavOpen","isModalOpen","this","setState","values","rating","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","select","model","value","text","placeholder","validators","minLength","show","messages","textarea","rows","type","Component","DishDetail","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderMess","Header","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","role","aria-label","Form","FormGroup","Input","innerRef","input","check","color","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","resetFeedbackForm","size","offset","checkbox","RenderLeader","Media","tag","left","middle","object","body","Heading","About","leaders","CardHeader","title","list","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","leaderErrMess","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2da4cf31.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Galería</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Galería</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, \r\n    Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction RenderDish({dish}) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if(comments != null)\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comentarios</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key={comment.id}>\r\n                                            <p>{comment.comment}</p>\r\n                                            <p>-- {comment.author}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                    )})}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n                )\r\n    else\r\n        return(<div></div>)\r\n    }\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal()\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-cart-arrow-down\"></span> Comprar</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Comprar</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={6}>Cantidad</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\"rating\" id=\"rating\" className=\"form-control\" md={6}>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Nombres</Label>\r\n                                    <Control.text \r\n                                        model=\".author\" \r\n                                        id=\"author\" \r\n                                        placeholder=\"Nombres\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                        />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\"name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\"></Label>\r\n                                    <Control.textarea model=\"comment\" id=\"comment\" className=\"form-control\" rows={6} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" className=\"bg-primary\">\r\n                                Comprar\r\n                            </Button> \r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n    if(props.dish != null)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Galería</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments}\r\n                                        postComment={props.postComment}\r\n                                        dishId={props.dish.id}\r\n                        />\r\n                </div>\r\n            </div>\r\n        )\r\n    else\r\n        return(\r\n            <div></div>\r\n        )\r\n}\r\n\r\nexport default DishDetail","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n    function RenderCard({item, isLoading, errMess}) {\r\n        if (isLoading) {\r\n            return(\r\n                    <Loading />\r\n            );\r\n        }\r\n        else if (errMess) {\r\n            return(\r\n                    <h4>{errMess}</h4>\r\n            );\r\n        }\r\n        else \r\n            return(\r\n                <FadeTransform in transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                        <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            );\r\n        }\r\n\r\nfunction Home(props) {\r\n    return(\r\n      <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n          <div className=\"col-12 col-md m-1\">\r\n              <RenderCard item={props.dish} \r\n                          isLoading={props.dishesLoading}\r\n                          errMess={props.dishesErrMess} />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n              <RenderCard item={props.promotion}\r\n                          isLoading={props.promoLoading}\r\n                          errMess={props.promoErrMess} />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n              <RenderCard item={props.leader}\r\n                          isLoading={props.leaderLoading}\r\n                          errMess={props.leaderMess} />\r\n          </div>\r\n      </div>\r\n  </div>\r\n    );\r\n}\r\n\r\nexport default Home; ","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem,\r\n         Jumbotron, Button, Modal, ModalHeader,\r\n          ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this)\r\n\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n  })\r\n}\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n          <NavbarToggler onClick={this.toggleNav} />\r\n          <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo-dudis.png' height=\"30\" width=\"41\" alt='DudisToys' /></NavbarBrand>\r\n          <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n              <NavItem>\r\n                  <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> Nosotros</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                  <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Galería</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contáctanos</NavLink>\r\n              </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                  </Button>\r\n                </NavItem>\r\n              </Nav>\r\n          </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Dudis'Toys</h1>\r\n                       <p>Bienvenidos a esta fascinante página de tecnología y entretenimiento con un espíritu innovador y mágico hacia la vida. <span role=\"img\" aria-label=\"\">😀</span></p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n         <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n         <ModalBody>\r\n           <Form onSubmit={this.handleLogin}>\r\n             <FormGroup>\r\n               <Label htmlFor=\"username\">Username</Label>\r\n               <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\r\n             </FormGroup>\r\n             <FormGroup>\r\n               <Label htmlFor=\"password\">Password</Label>\r\n               <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\r\n             </FormGroup>\r\n             <FormGroup check>\r\n               <Label check>\r\n                 <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} /> Remember me\r\n               </Label>\r\n             </FormGroup>\r\n             <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n           </Form>\r\n         </ModalBody>\r\n       </Modal>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, \r\n         Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);   \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contáctanos</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contáctanos</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Información Local</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Nuestra Dirección</h5>\r\n                            <address>\r\n                            121, Túpac Amaru<br />\r\n                            Lima<br />\r\n                            Perú<br />\r\n                            <i className=\"fa fa-phone\"></i>: +51 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +51 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">dudistoys@gmail.com</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Mapa de Ubicación</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#!\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Envíanos tu  Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>Nombres</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"Nombres\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Apellidos</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Número\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 6, offset: 2}}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                                /> {' '}\r\n                                            <strong>Podríamos contactarte?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={{size: 3, offset: 1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Tu Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"12\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Enviar Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                        </Row> \r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader ({leader}) {\r\n    return (\r\n            <Media tag=\"li\">\r\n                <Fade in>\r\n                    <Media left middle href=\"!#\">\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-3\">\r\n                        <Media Heading>\r\n                            {leader.name}\r\n                        </Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                    </Media>\r\n                </Fade>\r\n            </Media>\r\n    );\r\n}\r\n\r\nconst About = (props) => {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => \r\n         (\r\n            <RenderLeader leader={leader} />\r\n        )\r\n    );\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Nosotros</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Nosotros</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Nuestra Historia</h2>\r\n                    <p>Empresa de juguetes divertidos para niños y adolescentes.</p>\r\n                    <p>A medida que los niños dan forma a sus propios mundos, contribuimos a tener un impacto positivo en el mundo en el que viven hoy y heredarán en el futuro.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Hecha un Vistazo</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Inicio</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2015</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">LEGO</dd>\r\n                                <dt className=\"col-6\">Facturación en el último año</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Empleados</dt>\r\n                                <dd className=\"col-6\">60</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">Jugar para un niño y una niña es la posibilidad de recortar un trocito de mundo y manipularlo para entenderlo.</p>\r\n                                <footer className=\"blockquote-footer\">Francesco Tonucci.\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Liderazgo corporativo</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media className=\"mt-3\" list>\r\n                        <Stagger in>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;     ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>Nosotros</Link></li>\r\n                        <li><Link to='/menu'>Galería</Link></li>\r\n                        <li><Link to='/contactus'>Contáctanos</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Nuestra Direacción</h5>\r\n                    <address>\r\n\t\t              121, Túpac Amaru<br />\r\n\t\t              Lima<br />\r\n\t\t              Perú<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +51 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +51 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         dudistoys@gmail.com</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Dudis'Toys</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n  const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'comments', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading())\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n    if(response.ok) {\r\n      return response\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n    var errmess = new Error(error.message)\r\n    throw errmess\r\n  })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n})\r\n\r\n\r\n\r\nexport const addFeedback= (firstname, lastname, telnun, email, agree, contactType, message, id) => (dispatch) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: {\r\n    firstname:firstname,\r\n    lastname: lastname,\r\n    telnun: telnun,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n    id: id\r\n  }\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnun, email, agree, contactType, message, id) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname:firstname,\r\n    lastname: lastname,\r\n    telnun: telnun,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n    id: id\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};","export const ADD_DISHES = 'ADD_DISHES';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent'\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())},\r\n  // postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Main extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders()\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leaderLoading={this.props.leaders.isLoading}\r\n        leaderErrMess={this.props.leaders.errMess}\r\n    />\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n      />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        comment.id = state.comments.length;\r\n        comment.date = new Date().toISOString();\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","// import { LEADERS } from '../shared/leaders';\r\n\r\n// export const Leaders = (state = LEADERS, action) => {\r\n//     switch (action.type) {\r\n//         default:\r\n//           return state;\r\n//       }\r\n// };\r\n\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback:InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}